@charset "UTF-8";
/*
Variáveis: 
-> usa: $(nome da váriavel)
-> --watch: dentro do package.json dentro do "sass" para não ficar rodando o "npm run sass" direto
-> Vários arquivos podem ser criados para armazenar vários scss. Exemplo: reset.scss, main.css...
*/
/*
Declarando variável: 
$corPrincipal: #eee;

Hover: 
&:hover {}

Classes:
&.sucesso {}
*/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Roboto, sans-serif;
}

/*dentro do () tem como passar um parâmetro (como no JS) que seria "estático"
-> Exemplo: @mixin elementoForm($margin: 16px)
O 'margin-bottom' receberia o valor do parâmetro: margin-bottom: $margin;
*/
body {
  background-color: #eee;
}

.container {
  max-width: 1024px;
  width: 100%;
  margin: 0 auto;
}

header {
  padding: 16px 0;
  background-color: #01a3a4;
  text-align: center;
  color: #fff;
}

.form-container {
  height: calc(100vh - 70px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  max-width: 760px;
}
.form-container h2 {
  font-size: 3em;
  text-align: center;
}
.form-container form {
  width: 100%;
  max-width: 480px;
  margin-top: 40px;
}
.form-container form label {
  font-weight: bold;
  cursor: pointer;
}
.form-container form input {
  padding: 8px;
  display: block;
  width: 100%;
  margin-bottom: 16px;
  background-color: transparent;
  border: none;
  border-bottom: 3px solid #01a3a4;
}
.form-container form button {
  padding: 8px;
  display: block;
  width: 100%;
  margin-bottom: 16px;
  background-color: #00d2d3;
  font-size: 18px;
  font-weight: bold;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
.form-container form button:hover {
  background-color: #008687;
}

@media screen and (max-width: 767px) {
  .container {
    max-width: 80%;
  }
}

/*# sourceMappingURL=main.css.map */
